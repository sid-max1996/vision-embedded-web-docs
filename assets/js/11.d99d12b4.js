(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{281:function(e,v,t){"use strict";t.r(v);var r=t(14),s=Object(r.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"интерфеис-cubicplayer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#интерфеис-cubicplayer"}},[e._v("#")]),e._v(" Интерфейс CubicPlayer")]),e._v(" "),v("p",[e._v("Плеер CubicVision должен определять объект window.CubicPlayer на встраиваемой веб странице. Интерфейс должен включать следующие методы:")]),e._v(" "),v("h1",{attrs:{id:"работа-с-хранилищем-данных"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#работа-с-хранилищем-данных"}},[e._v("#")]),e._v(" Работа с хранилищем данных")]),e._v(" "),v("h2",{attrs:{id:"getstorevalue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getstorevalue"}},[e._v("#")]),e._v(" getStoreValue")]),e._v(" "),v("ul",[v("li",[e._v("Метод для получения ранее сохранённых данных из стора плеера")]),e._v(" "),v("li",[v("code",[e._v("getStoreValue(key: string): string | Promise<string>")])]),e._v(" "),v("li",[v("strong",[e._v("key")]),e._v(" - "),v("em",[e._v("Уникальный ключ ассоцируемый с данными")])]),e._v(" "),v("li",[v("em",[e._v("Возвращает JSON строку с данными или Promise c тем же результатом")])]),e._v(" "),v("li",[e._v("Если данные в хранилище не найдены, необходимо возвращать: "),v("code",[e._v("'null'")])]),e._v(" "),v("li",[e._v("В сторе могут храниться только строки в формате JSON")])]),e._v(" "),v("h2",{attrs:{id:"savestorevalue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#savestorevalue"}},[e._v("#")]),e._v(" saveStoreValue")]),e._v(" "),v("ul",[v("li",[e._v("Метод для сохранения данных в сторе плеера")]),e._v(" "),v("li",[v("code",[e._v("saveStoreValue(key: string, value: string, useAfterRepublishing: boolean): void | Promise<void>")])]),e._v(" "),v("li",[v("strong",[e._v("key")]),e._v(" - "),v("em",[e._v("Уникальный ключ ассоцируемый с данными")])]),e._v(" "),v("li",[v("strong",[e._v("value")]),e._v(" - "),v("em",[e._v("Строка в формате JSON (данные)")])]),e._v(" "),v("li",[v("strong",[e._v("useAfterRepublishing")]),e._v(" - "),v("em",[e._v("Должны ли данные очищаться после того как переопубликуют шаблон в CMS. true - не должны очищаться, false - должны очищаться. Если третий параметр отсутствует, считать, что передан false")])]),e._v(" "),v("li",[v("em",[e._v("Возвращает void или Promise c тем типом")])]),e._v(" "),v("li",[e._v("Сразу после того, как будет вызвана функция, данные в сторе должны измениться")]),e._v(" "),v("li",[e._v("В сторе могут храниться только строки в формате JSON")])]),e._v(" "),v("h1",{attrs:{id:"переход-между-сценами"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#переход-между-сценами"}},[e._v("#")]),e._v(" Переход между сценами")]),e._v(" "),v("h2",{attrs:{id:"gotoscene"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gotoscene"}},[e._v("#")]),e._v(" goToScene")]),e._v(" "),v("ul",[v("li",[e._v("Метод для переключения сцены")]),e._v(" "),v("li",[v("code",[e._v("goToScene(sceneId: number): void")])]),e._v(" "),v("li",[v("strong",[e._v("sceneId")]),e._v(" - "),v("em",[e._v("Id сцены, на которую нужно перейти")])])]),e._v(" "),v("h2",{attrs:{id:"gotopreviousscene"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gotopreviousscene"}},[e._v("#")]),e._v(" goToPreviousScene")]),e._v(" "),v("ul",[v("li",[e._v("Метод для перехода на предыдущую сцену")]),e._v(" "),v("li",[v("code",[e._v("goToPreviousScene(): void")])]),e._v(" "),v("li",[e._v("Плеер должен хранить id предыдущей сцены и осуществлять переход на эту сцену. Если предыдущей сцены не было, то ничего не делать.")]),e._v(" "),v("li",[e._v("Если были на первой сцене с id 0, то метод ничего не делает. Если затем перешли на сцену с id 1, и вызвали метод, то вернуться на сцену с id 0. Если вызывать метод ещё раз, ничего не делать, не нужно опять возвразаться на сцену с id 1.")])]),e._v(" "),v("h1",{attrs:{id:"логирование"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#логирование"}},[e._v("#")]),e._v(" Логирование")]),e._v(" "),v("h2",{attrs:{id:"writelogtofile"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#writelogtofile"}},[e._v("#")]),e._v(" writeLogToFile")]),e._v(" "),v("ul",[v("li",[e._v("Метод для записи лога в файл")]),e._v(" "),v("li",[v("code",[e._v("writeLogToFile(logType: string, logText: string): void")])]),e._v(" "),v("li",[v("strong",[e._v("logType")]),e._v(" - "),v("em",[e._v("'debug' | 'info' | 'error' | 'warning' (возможные значения)")])]),e._v(" "),v("li",[v("strong",[e._v("logText")]),e._v(" - "),v("em",[e._v("текст лога для записи")])]),e._v(" "),v("li",[e._v("Лог записывается новой строчкой в файл логов за текущий день")])])])}),[],!1,null,null,null);v.default=s.exports}}]);